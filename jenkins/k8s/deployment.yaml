apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: kubectl-jenkins-context
data:
  kubectl-config-context.sh: |-
    #!/bin/bash -v

    echo Running as `whoami`

    kubectl config set-credentials jenkins --token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
    kubectl config set-cluster kubernetes --server=https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT --certificate-authority="/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    kubectl config set-context jenkins-kubernetes --cluster=kubernetes --user=jenkins --namespace=$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)
    kubectl config use-context jenkins-kubernetes

    chmod 777 ~/.kube/config

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: jenkins
  labels:
    app: jenkins
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: jenkins
        tier: jenkins
    spec:
      serviceAccountName: jenkins
      initContainers:
      - image: lachlanevenson/k8s-kubectl:v1.11.2
        name: kubectl-config
        command:
        - "/bin/sh"
        args:
        - "/kubectl-config-context.sh"
        volumeMounts:
        - name: kubeconfig
          mountPath: "/root/.kube"
        - name: kubectl-jenkins-context
          mountPath: "/kubectl-config-context.sh"
          subPath: "kubectl-config-context.sh"
      containers:
      - image: aaquiff/jenkins-docker-kube
        name: jenkins
        imagePullPolicy: Always
        securityContext:
          runAsUser: 0
          # privileged: true
        volumeMounts:
        - name: kubeconfig
          mountPath: /var/jenkins_home/.kube
        - name: docker
          mountPath: /var/run/docker.sock
        - name: jenkins-persistent-storage
          mountPath: /var/jenkins_home
        ports:
        - containerPort: 8080
          name: jenkins
          protocol: TCP
      volumes:
      - name: kubectl-jenkins-context
        configMap:
          name: kubectl-jenkins-context
          items:
          - key: kubectl-config-context.sh
            path: kubectl-config-context.sh
      - name: kubeconfig
        emptyDir: {}
      - name: docker
        hostPath:
          path: /var/run/docker.sock
      - name: jenkins-persistent-storage
        # emptyDir: {}
        persistentVolumeClaim:
          claimName: jenkins-claim