apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: kubectl-jenkins-context
data:
  kubectl-config-context.sh: |-
    #!/bin/bash -v
    
    kubectl config set-credentials jenkins --token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
    kubectl config set-cluster kubernetes --server=https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT --certificate-authority="/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    kubectl config set-context jenkins-kubernetes --cluster=kubernetes --user=jenkins --namespace=$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)
    kubectl config use-context jenkins-kubernetes

    chmod 777 ~/.kube/config

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: jenkins
  labels:
    app: jenkins
spec:
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: jenkins
        tier: jenkins
    spec:
      serviceAccountName: jenkins
      initContainers:
      - image: lachlanevenson/k8s-kubectl:v1.11.2
        name: kubectl-config
        command:
        - "/bin/sh"
        args:
        - "/kubectl-config-context.sh"
        volumeMounts:
        - name: kubeconfig
          mountPath: "/root/.kube"
        - name: kubectl-jenkins-context
          mountPath: "/kubectl-config-context.sh"
          subPath: "kubectl-config-context.sh"
      containers:
      - image: aaquiff/jenkins-docker-kube:latest
        name: jenkins
        env:
        - name: WSO2_USERNAME
          valueFrom:
            secretKeyRef:
              name: wso2-credentials
              key: username
        - name: WSO2_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wso2-credentials
              key: password
        - name: REGISTRY_USERNAME
          valueFrom:
            secretKeyRef:
              name: registry-credentials-pod
              key: username
        - name: REGISTRY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: registry-credentials-pod
              key: password
        - name: CASC_JENKINS_CONFIG
          value: "/var/casc_configs"
        - name: PROD_CONFIG_LOCATION
          value: "/var/prod-config"
        imagePullPolicy: Always
        readinessProbe:
          periodSeconds: 10
          exec:
            command:
            - /bin/bash
            - -c
            - wum version
            - docker version
            - kubectl version
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: kubeconfig
          mountPath: /root/.kube
        - name: docker
          mountPath: /var/run/docker.sock
        - name: jenkins-persistent-storage
          mountPath: /var/jenkins_home
        - name: wso2-credentials
          mountPath: /wso2creds
        - name: jenkins-casc-conf
          mountPath: /var/casc_configs
        - name: prod-config-conf
          mountPath: /var/prod-config
        ports:
        - containerPort: 8080
          name: jenkins
          protocol: TCP
      volumes:
      - name: kubectl-jenkins-context
        configMap:
          name: kubectl-jenkins-context
          items:
          - key: kubectl-config-context.sh
            path: kubectl-config-context.sh
      - name: kubeconfig
        emptyDir: {}
      - name: docker
        hostPath:
          path: /var/run/docker.sock
      - name: jenkins-persistent-storage
        persistentVolumeClaim:
          claimName: jenkins-claim
      - name: wso2-credentials
        secret:
          secretName: wso2-credentials
      - name: jenkins-casc-conf
        configMap:
          name: jenkins-casc-conf
      - name: prod-config-conf
        configMap:
          name: prod-config-conf