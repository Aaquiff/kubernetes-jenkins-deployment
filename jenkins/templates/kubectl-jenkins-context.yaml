apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: kubectl-jenkins-context
data:
  kubectl-config-context.sh: |-
    #!/bin/bash -v

    # # Configure external production cluster using the mounted secrets
    # PROD_CRED_PATH=/secrets/prod-credentials

    # USERNAME=$(cat $PROD_CRED_PATH/username)
    # PASSWORD=$(cat $PROD_CRED_PATH/password)
    # SERVER=$(cat $PROD_CRED_PATH/server)
    # CERTIFICATE_PATH=$PROD_CRED_PATH/ca.crt
    # NAMESPACE="default"
 
    # kubectl config set-credentials prod-admin --username=$USERNAME --password=$PASSWORD
    # kubectl config set-cluster production --server=$SERVER --certificate-authority=$CERTIFICATE_PATH
    # kubectl config set-context production --cluster=production --user=prod-admin --namespace=$NAMESPACE
    # kubectl config use-context production

    # # Create docker-registry secret in production cluster
    # REG_CRED_PATH="/secrets/registry-credentials-pod"
    # REGISTRY_SERVER=$(cat $REG_CRED_PATH/server)
    # REGISTRY_USERNAME=$(cat $REG_CRED_PATH/username)
    # REGISTRY_PASSWORD=$(cat $REG_CRED_PATH/password)
    # REGISTRY_EMAIL=$(cat $REG_CRED_PATH/email)
    # kubectl create secret docker-registry registry-credentials --docker-server=$REGISTRY_SERVER --docker-username=$REGISTRY_USERNAME --docker-password=$REGISTRY_PASSWORD --docker-email=$REGISTRY_EMAIL --dry-run -o yaml | kubectl apply -f -

    cp /root/kube-conf/* /root/.kube/
    
    # Configure kubeconfig entry for local cluster
    kubectl config set-credentials jenkins --token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
    kubectl config set-cluster kubernetes --server=https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT --certificate-authority="/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    kubectl config set-context jenkins-kubernetes --cluster=kubernetes --user=jenkins --namespace=$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)
    kubectl config use-context jenkins-kubernetes
    
    chmod 777 ~/.kube/config

---

