apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: jenkins
  labels:
    app: jenkins
spec:
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: jenkins
        tier: jenkins
    spec:
      serviceAccountName: jenkins
      initContainers:
      - image: alpine/helm:2.9.0
        name: helm-config
        command: ["/bin/sh"]
        args: ["-c", "helm init --client-only"]
        volumeMounts:
        - name: helm-conf
          mountPath: "/root/.helm"
      containers:
      - image: {{ .Values.image }}
        name: jenkins
        env:
        - name: JAVA_OPTS
          value: "-Djenkins.install.runSetupWizard=false"
        - name: WSO2_USERNAME
          valueFrom:
            secretKeyRef:
              name: wso2-credentials
              key: username
        - name: WSO2_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wso2-credentials
              key: password
        - name: REGISTRY_SERVER
          valueFrom:
            secretKeyRef:
              name: registry-credentials-pod
              key: server
        - name: REGISTRY_USERNAME
          valueFrom:
            secretKeyRef:
              name: registry-credentials-pod
              key: username
        - name: REGISTRY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: registry-credentials-pod
              key: password
        - name: GITHUB_USERNAME
          value: {{ .Values.github.username}}
        - name: GITHUB_PASSWORD
          value: {{ .Values.github.password}}
        - name: CASC_JENKINS_CONFIG
          value: "/var/casc_configs"
        imagePullPolicy: Always
        readinessProbe:
          periodSeconds: 10
          httpGet:
            path: "/login"
            port: 8080
        livenessProbe:
          periodSeconds: 10
          initialDelaySeconds: 300
          httpGet:
            path: "/login"
            port: 8080
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: docker
          mountPath: /var/run/docker.sock
        - name: jenkins-persistent-storage
          mountPath: /var/jenkins_home
        - name: wso2-credentials
          mountPath: /wso2creds
        - name: jenkins-casc-conf
          mountPath: /var/casc_configs
        - name: helm-conf
          mountPath: "/root/.helm"
        ports:
        - containerPort: 8080
          name: jenkins
          protocol: TCP
      volumes:
      - name: docker
        hostPath:
          path: /var/run/docker.sock
      - name: jenkins-persistent-storage
        persistentVolumeClaim:
          claimName: jenkins-claim
      - name: wso2-credentials
        secret:
          secretName: wso2-credentials
      - name: jenkins-casc-conf
        configMap:
          name: jenkins-casc-conf
      - name: registry-credentials-pod
        secret:
          secretName: registry-credentials-pod
      - name: helm-conf
        emptyDir: {}
